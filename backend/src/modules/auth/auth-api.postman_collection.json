{
  "info": {
    "name": "Auth API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Collection for testing authentication and authorization API endpoints"
  },
  "item": [
    {
      "name": "Login",
      "request": {
        "method": "POST",
        "url": {
          "raw": "{{baseUrl}}/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "login"]
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-tenant-id",
            "value": "1",
            "description": "ID of the tenant"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"admin_user\",\n  \"password\": \"Password123!\"\n}"
        },
        "description": "Login to the system and get a JWT token"
      }
    },
    {
      "name": "Get Profile",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/auth/profile",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "profile"]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}",
            "description": "JWT token from login"
          },
          {
            "key": "x-tenant-id",
            "value": "1",
            "description": "ID of the tenant"
          }
        ],
        "description": "Get the profile of the currently logged in user"
      }
    },
    {
      "name": "Change Password",
      "request": {
        "method": "POST",
        "url": {
          "raw": "{{baseUrl}}/auth/change-password",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "change-password"]
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{token}}",
            "description": "JWT token from login"
          },
          {
            "key": "x-tenant-id",
            "value": "1",
            "description": "ID of the tenant"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"currentPassword\": \"Password123!\",\n  \"newPassword\": \"NewPassword123!\"\n}"
        },
        "description": "Change the password of the currently logged in user"
      }
    },
    {
      "name": "Refresh Token",
      "request": {
        "method": "POST",
        "url": {
          "raw": "{{baseUrl}}/auth/refresh-token",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "refresh-token"]
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"token\": \"{{token}}\"\n}"
        },
        "description": "Refresh the JWT token"
      }
    },
    {
      "name": "Logout",
      "request": {
        "method": "POST",
        "url": {
          "raw": "{{baseUrl}}/auth/logout",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "logout"]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}",
            "description": "JWT token from login"
          },
          {
            "key": "x-tenant-id",
            "value": "1",
            "description": "ID of the tenant"
          }
        ],
        "description": "Logout from the system"
      }
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "if (pm.response.code === 200 && pm.response.json().access_token) {",
          "    pm.environment.set('token', pm.response.json().access_token);",
          "    console.log('Token set to: ' + pm.environment.get('token'));",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    }
  ]
}
